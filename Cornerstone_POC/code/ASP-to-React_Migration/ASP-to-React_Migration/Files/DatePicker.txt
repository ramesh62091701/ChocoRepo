import {
    SingleDatePicker,
    SingleDateValue,
    usePlayerGlobalizationI18n,
    defaultPlayerGlobalizationI18nContext,
} from "@flare/primitives/date-picker";
import { Culture } from "player-globalization";
import React from "react";
import { useDispatch } from "react-redux";
import { useLocalizationsDefaults } from "@flare/primitives/core-ui";

interface Props {
    dateValue: SingleDateValue;
    // setSelectedDate: (
    //     field: keyof DetailsState,
    //     value: string | SingleDateValue | null
    // ) => void;
}

const DatePicker: React.FC<Props> = ({ dateValue }) => {
    const i18nTools = usePlayerGlobalizationI18n(
        Culture,
        defaultPlayerGlobalizationI18nContext
    );
    const DueDateLabel = useLocalizationsDefaults(`${TrainingDetails.DueDate}`);
    const [DateValue, setDateValue] = React.useState<SingleDateValue>(dateValue);
    const [hasError, setHasError] = React.useState<boolean>(false);
    const [errorMessage, setErrorMessage] = React.useState<string>("");
    const dispatch: any = useDispatch();

    const today = new Date();
    return (
        <SingleDatePicker
            id="disabled-days"
            size="medium"
            label={DueDateLabel}
            value={DateValue}
            disabledDays={{
                before: new Date(new Date().setDate(today.getDate())),
            }}
            i18n={i18nTools}
            hasError={hasError}
            errorMessage={errorMessage}
        />
    );
};

export default DatePicker;